{"version":3,"sources":["Components/Cadastro.js","Components/Conferencia.js","Components/Monitoramento.js","Components/App.js","serviceWorker.js","index.js"],"names":["Cadastro","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","nome","cor","video","React","createRef","_this2","navigator","mediaDevices","getUserMedia","then","stream","current","srcObject","play","react_default","a","createElement","className","onSubmit","bind","type","onChange","onChangeNome","value","onChangeCor","ref","autoPlay","event","preventDefault","history","push","pathname","setState","target","Component","Video","elemento","inscricao","remoto","ontrack","streams","Conferencia","_this3","selecionado","inscricoes","assign","location","onSignaling","_this4","_this5","conectados","forEach","item","indice","key","onClick","onSeleciona","id","Conferencia_Video","style","backgroundColor","borderColor","signaling","send","JSON","stringify","evento","_this6","substring","length","url","protocol","window","hostname","WebSocket","encodeURI","onopen","console","log","onmessage","response","local","parametros","parse","data","RTCPeerConnection","onnegotiationneeded","createOffer","offerToReceiveVideo","oferta","setLocalDescription","onicecandidate","candidate","candidato","addStream","find","setRemoteDescription","createAnswer","resposta","addIceCandidate","filter","onclose","Monitoramento","src","App","BrowserRouter","Route","path","component","Boolean","match","ReactDOM","render","Components_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"iPAgFeA,cA5EX,SAAAA,EAAYC,GACZ,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACIE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAEDQ,MAAQ,CACTC,KAAM,GACNC,IAAK,WAGTT,EAAKU,MAAQC,IAAMC,YARvBZ,mFAWA,IAAAa,EAAAV,KACIW,UAAUC,aAAaC,aAAa,CAACN,OAAO,IACvCO,KAAK,SAACC,GACCL,EAAKH,QAELG,EAAKH,MAAMS,QAAQC,UAAYF,EAC/BL,EAAKH,MAAMS,QAAQE,2CAM/B,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,OAAOC,SAAUvB,KAAKuB,SAASC,KAAKxB,OAChDmB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAEXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,UAAjB,uBACAH,EAAAC,EAAAC,cAAA,SAAOI,KAAK,OAAOH,UAAU,OAAOI,SAAU1B,KAAK2B,aAAaH,KAAKxB,MAAO4B,MAAO5B,KAAKI,MAAMC,QAGlGc,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,UAAjB,uBACAH,EAAAC,EAAAC,cAAA,SAAOI,KAAK,QAAQH,UAAU,QAAQI,SAAU1B,KAAK6B,YAAYL,KAAKxB,MAAO4B,MAAO5B,KAAKI,MAAME,OAGnGa,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,SAAOI,KAAK,SAASH,UAAU,SAASM,MAAM,iBAMtDT,EAAAC,EAAAC,cAAA,SAAOC,UAAU,QAAQQ,IAAK9B,KAAKO,MAAOwB,UAAQ,sCAIrDC,GAELA,EAAMC,iBAENjC,KAAKJ,MAAMsC,QAAQC,KAAK,CACpBC,SAAU,cACVhC,MAAO,CACHC,KAAML,KAAKI,MAAMC,KACjBC,IAAKN,KAAKI,MAAME,4CAIf0B,GAEThC,KAAKqC,SAAS,CACVhC,KAAM2B,EAAMM,OAAOV,4CAGfI,GAERhC,KAAKqC,SAAS,CACV/B,IAAK0B,EAAMM,OAAOV,eAzEPW,aCAjBC,cAEF,SAAAA,EAAY5C,GACZ,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwC,IACI3C,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0C,GAAArC,KAAAH,KAAMJ,KAED6C,SAAWjC,IAAMC,YAH1BZ,2FAMA,IAAAa,EAAAV,KACQA,KAAKJ,MAAM8C,UAAUC,SAErB3C,KAAKJ,MAAM8C,UAAUC,OAAOC,QAAU,SAACZ,GAEnCtB,EAAK+B,SAASzB,QAAQC,UAAYe,EAAMa,QAAQ,GAChDnC,EAAK+B,SAASzB,QAAQE,0CAM9B,OACIC,EAAAC,EAAAC,cAAA,SAAOS,IAAK9B,KAAKyC,kBAtBTF,aA6VLO,cAhUX,SAAAA,EAAYlD,GACZ,IAAAmD,EAWI,OAXJjD,OAAAC,EAAA,EAAAD,CAAAE,KAAA8C,IACIC,EAAAjD,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgD,GAAA3C,KAAAH,KAAMJ,KAEDW,MAAQC,IAAMC,YAEnBsC,EAAKC,YAAcxC,IAAMC,YAEzBsC,EAAK3C,MAAQ,CAAC6C,WAAY,IAE1BF,EAAK3C,MAAQN,OAAOoD,OAAOH,EAAK3C,MAAO2C,EAAKnD,MAAMuD,SAAS/C,OAEpC,KAApB2C,EAAK3C,MAAMC,MAA0C,qBAApB0C,EAAK3C,MAAMC,MAE3C0C,EAAKnD,MAAMsC,QAAQC,KAAK,YAExBrC,OAAAG,EAAA,EAAAH,CAAAiD,IAGkB,KAAnBA,EAAK3C,MAAME,KAAwC,qBAAnByC,EAAK3C,MAAME,KAE1CyC,EAAKnD,MAAMsC,QAAQC,KAAK,YAExBrC,OAAAG,EAAA,EAAAH,CAAAiD,KAGJA,EAAKK,cAzBTL,oFA4BA,IAAAM,EAAArD,KACIW,UAAUC,aAAaC,aAAa,CAACN,OAAO,IAAOO,KAAK,SAACC,GACrDsC,EAAK9C,MAAMS,QAAQC,UAAYF,EAC/BsC,EAAK9C,MAAMS,QAAQE,0CAI3B,IAAAoC,EAAAtD,KACQuD,EAAa,GAoBjB,OAlBAvD,KAAKI,MAAM6C,WAAWO,QAAQ,SAACC,EAAMC,GAEjCH,EAAWpB,KACPhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOqC,IAAKD,EAAQE,QAASN,EAAKO,YAAYrC,KAAK8B,EAAMG,EAAKK,KAEzE3C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAC0C,EAAD,CAAOrB,UAAWe,KAGtBtC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiB0C,MAAO,CAACC,gBAAiB,IAAMR,EAAKnD,MAChEa,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAamC,EAAKpD,WAS7Cc,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAEXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,SAAOS,IAAK9B,KAAKgD,eAGrB7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAEXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOsC,QAAS5D,KAAK6D,YAAYrC,KAAKxB,KAAMA,KAAKI,MAAM0D,KAElE3C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBAAyB0C,MAAO,CAACE,YAAa,eAAelE,KAAKI,MAAME,IAAI,8BAE3Fa,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BAA0B0C,MAAO,CAACE,YAAa,uCAAwClE,KAAKI,MAAME,OAEjHa,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOS,IAAK9B,KAAKO,SAGrBY,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiB0C,MAAO,CAACC,gBAAiBjE,KAAKI,MAAME,MAChEa,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAatB,KAAKI,MAAMC,SAOnDc,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACViC,yCAOTO,GAER9D,KAAKmE,UAAUC,KACXC,KAAKC,UAAU,CACXC,OAAQ,cACRT,GAAIA,2CAKhB,IAAAU,EAAAxE,KACQK,EAAOL,KAAKI,MAAMC,KAElBC,EAAMN,KAAKI,MAAME,IAAImE,UAAU,EAAGzE,KAAKI,MAAME,IAAIoE,QAUjDC,EAAMC,UANCC,OAAO1B,SAAS2B,UAAY,aAMH,UAFnB,QAAUzE,EAAO,QAAUC,GAI5CN,KAAKmE,UAAY,IAAIY,UAAUC,UAAUL,IAEzC3E,KAAKmE,UAAUc,OAAS,WAEpBC,QAAQC,IAAI,WAGhBnF,KAAKmE,UAAUiB,UAAY,SAACC,GAIxB,IAAIpC,EAEAP,EAIA4C,EAEA3C,EAVJuC,QAAQC,IAAI,YAYZ,IAAII,EAAalB,KAAKmB,MAAMH,EAASI,MAErC,OAAQF,EAAWhB,QAEf,IAAK,gBAEDC,EAAKnC,SAAS,CAACyB,GAAIyB,EAAWzB,KAE9B,MAEJ,IAAK,UAEDpB,EAAY,CACRoB,GAAIyB,EAAWzB,GACfzD,KAAMkF,EAAWlF,KACjBC,IAAKiF,EAAWjF,MAGpBgF,EAAQ,IAAII,mBAENC,oBAAsB,WAExBL,EAAMM,YAAY,CAACC,qBAAqB,IAAO/E,KAAK,SAACgF,GAEjDR,EAAMS,oBAAoBD,GAAQhF,KAAK,WAEnC0D,EAAKL,UAAUC,KACXC,KAAKC,UAAU,CACXC,OAAQ,SACRuB,OAAQA,EACRhC,GAAIpB,EAAUoB,WAUlCwB,EAAMU,eAAiB,SAAChE,GAEhBA,EAAMiE,WAENzB,EAAKL,UAAUC,KACXC,KAAKC,UAAU,CACXC,OAAQ,YACRT,GAAIpB,EAAUoB,GACdoC,UAAWlE,EAAMiE,cAMjCtF,UAAUC,aAAaC,aAAa,CAACN,OAAO,IAAOO,KAAK,SAACC,GAErDuE,EAAMa,UAAUpF,KAIpB2B,EAAU4C,MAAQA,GAElBrC,EAAauB,EAAKpE,MAAM6C,YAEbd,KAAKO,GAEhB8B,EAAKnC,SAAS,CAACY,eAEf,MAEJ,IAAK,SAEDA,EAAauB,EAAKpE,MAAM6C,WAExBP,EAAYO,EAAWmD,KAAK,SAAC3C,GAEzB,OAAOA,EAAKK,KAAOyB,EAAWzB,MAGlCnB,EAAS,IAAI+C,mBAENW,qBAAqBd,EAAWO,QAAQhF,KAAK,WAEhD6B,EAAO2D,eAAexF,KAAK,SAACyF,GAExB5D,EAAOoD,oBAAoBQ,GAAUzF,KAAK,WAEtC0D,EAAKL,UAAUC,KACXC,KAAKC,UAAU,CACXC,OAAQ,WACRgC,SAAUA,EACVzC,GAAIpB,EAAUoB,YAOlCpB,EAAUC,OAASA,EAEnB6B,EAAKnC,SAAS,CAACY,eAEf,MAEJ,IAAK,WAEDA,EAAauB,EAAKpE,MAAM6C,YAExBP,EAAY8B,EAAKpE,MAAM6C,WAAWmD,KAAK,SAAC3C,GAEpC,OAAOA,EAAKK,KAAOyB,EAAWzB,MAGxBwB,MAAMe,qBAAqBd,EAAWgB,UAEhD/B,EAAKnC,SAAS,CAACY,eAEf,MAEJ,IAAK,YAEDA,EAAauB,EAAKpE,MAAM6C,YAExBP,EAAY8B,EAAKpE,MAAM6C,WAAWmD,KAAK,SAAC3C,GAEpC,OAAOA,EAAKK,KAAOyB,EAAWzB,MAGxBnB,OAAO6D,gBAAgBjB,EAAWW,WAE5C1B,EAAKnC,SAAS,CAACY,eAEf,MAEJ,IAAK,eAEDA,EAAauB,EAAKpE,MAAM6C,WAAWwD,OAAO,SAAChD,GAEvC,OAAOA,EAAKK,KAAOyB,EAAWzB,KAGlCU,EAAKnC,SAAS,CAACY,eAEnB,IAAK,cAEGsC,EAAWzB,IAAMU,EAAKpE,MAAM0D,GAE5BnD,UAAUC,aAAaC,aAAa,CAACN,OAAO,IAAOO,KAAK,SAACC,GAErDyD,EAAKxB,YAAYhC,QAAQC,UAAYF,EACrCyD,EAAKxB,YAAYhC,QAAQE,UAK7BwB,EAAY8B,EAAKpE,MAAM6C,WAAWmD,KAAK,SAAC3C,GAEpC,OAAOA,EAAKK,KAAOyB,EAAWzB,OAGjBpB,EAAUC,SAEvBD,EAAUC,OAAOC,QAAU,SAACZ,GAExBwC,EAAKxB,YAAYhC,QAAQC,UAAYe,EAAMa,QAAQ,GACnD2B,EAAKxB,YAAYhC,QAAQE,WASjDlB,KAAKmE,UAAUuC,QAAU,WAErBxB,QAAQC,IAAI,mBA7TE5C,aC8EXoE,mLArGP,OACIxF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAAf,iCACAH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBACVH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BAA0B0C,MAAO,CAACC,gBAAiB,QAAlE,SAEJ9C,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAAf,cAEJH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BAA0B0C,MAAO,CAACC,gBAAiB,UAAlE,eAIR9C,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBACVH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BAA0B0C,MAAO,CAACC,gBAAiB,SAAlE,UAEJ9C,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAAf,cAEJH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BAA0B0C,MAAO,CAACC,gBAAiB,UAAlE,eAIR9C,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBACVH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BAA0B0C,MAAO,CAACC,gBAAiB,UAAlE,aAEJ9C,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAAf,kBAEJH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BAA0B0C,MAAO,CAACC,gBAAiB,QAAlE,aAMpB9C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAAqBH,EAAAC,EAAAC,cAAA,eAApC,eACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAAqBH,EAAAC,EAAAC,cAAA,qBAApC,mBAIZF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,OAAKuF,IAAI,mCAEbzF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BAA0B0C,MAAO,CAACC,gBAAiB,SAAlE,UAGJ9C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,OAAKuF,IAAI,mCAEbzF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BAA0B0C,MAAO,CAACC,gBAAiB,QAAlE,SAGJ9C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,OAAKuF,IAAI,mCAEbzF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BAA0B0C,MAAO,CAACC,gBAAiB,UAAlE,SAGJ9C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,OAAKuF,IAAI,mCAEbzF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BAA0B0C,MAAO,CAACC,gBAAiB,SAAlE,SAGJ9C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,OAAKuF,IAAI,mCAEbzF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BAA0B0C,MAAO,CAACC,gBAAiB,WAAlE,WAGJ9C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,OAAKuF,IAAI,mCAEbzF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BAA0B0C,MAAO,CAACC,gBAAiB,SAAlE,sBAhGI1B,aCwBbsE,cAlBb,SAAAA,EAAYjH,GACX,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAA6G,GAAA/G,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+G,GAAA1G,KAAAH,KACOJ,0EAIN,OACEuB,EAAAC,EAAAC,cAACyF,EAAA,EAAD,KACE3F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC0F,EAAA,EAAD,CAAOC,KAAK,YAAYC,UAAWtH,IACnCwB,EAAAC,EAAAC,cAAC0F,EAAA,EAAD,CAAOC,KAAK,eAAeC,UAAWnE,IACtC3B,EAAAC,EAAAC,cAAC0F,EAAA,EAAD,CAAOC,KAAK,iBAAiBC,UAAWN,aAbhCpE,aCIE2E,QACW,cAA7BrC,OAAO1B,SAAS2B,UAEe,UAA7BD,OAAO1B,SAAS2B,UAEhBD,OAAO1B,SAAS2B,SAASqC,MACvB,iECTNC,IAASC,OAAOlG,EAAAC,EAAAC,cAACiG,EAAD,MAASC,SAASC,eAAe,SDkH3C,kBAAmB7G,WACrBA,UAAU8G,cAAcC,MAAM5G,KAAK,SAAA6G,GACjCA,EAAaC","file":"static/js/main.50b4a5cb.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Cadastro extends Component \n{\n    constructor(props)\n    {\n        super(props);\n\n        this.state = {\n            nome: '',\n            cor: '#000000',\n        };\n\n        this.video = React.createRef();\n    }\n    componentDidMount()\n    {\n        navigator.mediaDevices.getUserMedia({video: true})\n            .then((stream) => {\n                if (this.video)\n                {\n                    this.video.current.srcObject = stream;\n                    this.video.current.play();\n                }\n            });\n    }\n    render()\n    {\n        return (\n            <div className=\"Cadastro\">\n                <form className=\"Form\" onSubmit={this.onSubmit.bind(this)}>\n                    <div className=\"Fields\">\n                        \n                        <div className=\"Field\">\n                            <label className=\"Legend\">Digite o o seu Nome</label>\n                            <input type=\"text\" className=\"Text\" onChange={this.onChangeNome.bind(this)} value={this.state.nome}/>\n                        </div>\n\n                        <div className=\"Field\">\n                            <label className=\"Legend\">Selecione a sua cor</label>\n                            <input type=\"color\" className=\"Color\" onChange={this.onChangeCor.bind(this)} value={this.state.cor}/>\n                        </div>\n\n                        <div className=\"Field\">\n                        <input type=\"submit\" className=\"Submit\" value=\"Continuar\"/>\n                        </div>\n\n                    </div>\n                </form>\n\n                <video className=\"Video\" ref={this.video} autoPlay></video>\n            </div>\n        )\n    }\n    onSubmit(event)\n    {\n        event.preventDefault();\n\n        this.props.history.push({\n            pathname: 'conferencia',\n            state: {\n                nome: this.state.nome,\n                cor: this.state.cor,\n            },\n        });\n    }\n    onChangeNome(event)\n    {\n        this.setState({\n            nome: event.target.value\n        })\n    }\n    onChangeCor(event)\n    {\n        this.setState({\n            cor: event.target.value\n        })\n    }\n}\n\nexport default Cadastro;","import React, { Component } from 'react';\n\nclass Video extends Component \n{\n    constructor(props)\n    {\n        super(props);\n\n        this.elemento = React.createRef();\n    }\n    componentWillReceiveProps()\n    {\n        if (this.props.inscricao.remoto)\n        {\n            this.props.inscricao.remoto.ontrack = (event) => \n            {\n                this.elemento.current.srcObject = event.streams[0];\n                this.elemento.current.play();\n            }\n        }\n    }\n    render()\n    {\n        return (\n            <video ref={this.elemento}></video>\n        )\n    }\n}\n\nclass Conferencia extends Component \n{\n    constructor(props)\n    {\n        super(props);\n\n        this.video = React.createRef();\n\n        this.selecionado = React.createRef();\n\n        this.state = {inscricoes: []};\n    \n        this.state = Object.assign(this.state, this.props.location.state);\n\n        if(this.state.nome === '' || typeof this.state.nome === 'undefined')\n        {\n            this.props.history.push('cadastro');\n\n            return;\n        }\n\n        if(this.state.cor === '' || typeof this.state.cor === 'undefined')\n        {\n            this.props.history.push('cadastro');\n\n            return;\n        }\n\n        this.onSignaling();\n    }\n    componentDidMount()\n    {\n        navigator.mediaDevices.getUserMedia({video: true}).then((stream) => {\n            this.video.current.srcObject = stream;\n            this.video.current.play();\n        });\n    }\n    render()\n    {\n        let conectados = [];\n\n        this.state.inscricoes.forEach((item, indice) => {\n\n            conectados.push(\n                <div className=\"Item\" key={indice} onClick={this.onSeleciona.bind(this, item.id)}>\n                            \n                    <div className=\"Item-Video\">\n                        <Video inscricao={item} />\n                    </div>\n\n                    <div className=\"Item-Descricao\" style={{backgroundColor: '#' + item.cor}}>\n                        <div className=\"Item-Nome\">{item.nome}</div>\n                    </div>\n\n                </div>\n            );\n\n        });\n\n        return (\n            <div className=\"Conferencia\">\n                \n                <div className=\"Video\">\n                    <video ref={this.selecionado}/>\n                </div>\n\n                <div className=\"Convidados\">\n                    <div className=\"Fixado\">\n\n                        <div className=\"Item\" onClick={this.onSeleciona.bind(this, this.state.id)}>\n                            \n                            <div className=\"Item-Destaque-Portrait\" style={{borderColor: 'transparent '+this.state.cor+' transparent transparent'}}></div>\n\n                            <div className=\"Item-Destaque-Landscape\" style={{borderColor: 'transparent transparent transparent '+ this.state.cor }}></div>\n\n                            <div className=\"Item-Video\">\n                                <video ref={this.video}/>\n                            </div>\n\n                            <div className=\"Item-Descricao\" style={{backgroundColor: this.state.cor}}>\n                                <div className=\"Item-Nome\">{this.state.nome}</div>\n                            </div>\n\n                        </div>\n\n                    </div>\n\n                    <div className=\"Dinamicos\">\n                        {conectados}\n                    </div>\n                </div>\n\n            </div>\n        );\n    }\n    onSeleciona(id)\n    {\n        this.signaling.send(\n            JSON.stringify({\n                evento: 'selecionado',\n                id: id,\n            })\n        );\n    }\n    onSignaling()\n    {\n        let nome = this.state.nome;\n\n        let cor = this.state.cor.substring(1, this.state.cor.length);\n\n        let protocol = 'wss';\n\n        let host = window.location.hostname || 'localhost';\n\n        let port = 8443;\n\n        let parametros = 'nome=' + nome + '&cor=' + cor;\n\n        let url = protocol + '://' + host + ':' + port + '?' + parametros;\n\n        this.signaling = new WebSocket(encodeURI(url));\n\n        this.signaling.onopen = () =>\n        {\n            console.log('aberto')\n        }\n\n        this.signaling.onmessage = (response) =>\n        {\n            console.log('recebido');\n\n            let inscricoes;\n\n            let inscricao;\n\n            let indice;\n\n            let local;\n\n            let remoto;\n\n            let parametros = JSON.parse(response.data);\n\n            switch (parametros.evento)\n            {\n                case 'identificacao':\n\n                    this.setState({id: parametros.id})\n\n                    break;\n\n                case 'criacao':\n\n                    inscricao = {\n                        id: parametros.id,\n                        nome: parametros.nome,\n                        cor: parametros.cor,\n                    };\n\n                    local = new RTCPeerConnection();\n\n                    local.onnegotiationneeded = () =>\n                    {\n                        local.createOffer({offerToReceiveVideo: true}).then((oferta) =>\n                        {\n                            local.setLocalDescription(oferta).then(() =>\n                            {\n                                this.signaling.send(\n                                    JSON.stringify({\n                                        evento: 'oferta',\n                                        oferta: oferta,\n                                        id: inscricao.id\n                                    })\n                                )\n\n                            });\n\n                        });\n\n                    };\n\n                    local.onicecandidate = (event) => \n                    {\n                        if (event.candidate)\n                        {\n                            this.signaling.send(\n                                JSON.stringify({\n                                    evento: 'candidato',\n                                    id: inscricao.id,\n                                    candidato: event.candidate,\n                                })\n                            );\n                        }\n                    }\n\n                    navigator.mediaDevices.getUserMedia({video: true}).then((stream) =>\n                    {\n                        local.addStream(stream);\n\n                    });\n\n                    inscricao.local = local;\n\n                    inscricoes = this.state.inscricoes;\n\n                    inscricoes.push(inscricao);\n\n                    this.setState({inscricoes});\n                \n                    break;\n\n                case 'oferta':\n\n                    inscricoes = this.state.inscricoes; \n\n                    inscricao = inscricoes.find((item) =>\n                    {\n                        return item.id === parametros.id\n                    });\n\n                    remoto = new RTCPeerConnection();\n\n                    remoto.setRemoteDescription(parametros.oferta).then(() =>\n                    {\n                        remoto.createAnswer().then((resposta) =>\n                        {\n                            remoto.setLocalDescription(resposta).then(() =>\n                            {\n                                this.signaling.send(\n                                    JSON.stringify({\n                                        evento: 'resposta',\n                                        resposta: resposta,\n                                        id: inscricao.id,\n                                    })\n                                );\n                            });\n                        });\n                    });\n\n                    inscricao.remoto = remoto;\n\n                    this.setState({inscricoes});\n\n                    break;\n\n                case 'resposta':\n\n                    inscricoes = this.state.inscricoes; \n\n                    inscricao = this.state.inscricoes.find((item) =>\n                    {\n                        return item.id === parametros.id\n                    });\n\n                    inscricao.local.setRemoteDescription(parametros.resposta);\n\n                    this.setState({inscricoes});\n\n                    break;\n\n                case 'candidato':\n\n                    inscricoes = this.state.inscricoes; \n\n                    inscricao = this.state.inscricoes.find((item) =>\n                    {\n                        return item.id === parametros.id\n                    });\n\n                    inscricao.remoto.addIceCandidate(parametros.candidato);\n\n                    this.setState({inscricoes});\n\n                    break;\n\n                case 'desconectado':\n\n                    inscricoes = this.state.inscricoes.filter((item) =>\n                    {\n                        return item.id !== parametros.id\n                    });\n\n                    this.setState({inscricoes});                \n                \n                case 'selecionado':\n\n                    if (parametros.id == this.state.id)\n                    {\n                        navigator.mediaDevices.getUserMedia({video: true}).then((stream) =>\n                        {\n                            this.selecionado.current.srcObject = stream;\n                            this.selecionado.current.play();\n                        });\n\n                    } else {\n\n                        inscricao = this.state.inscricoes.find((item) =>\n                        {\n                            return item.id === parametros.id\n                        });\n\n                        if (inscricao && inscricao.remoto)\n                        {\n                            inscricao.remoto.ontrack = (event) =>\n                            {\n                                this.selecionado.current.srcObject = event.streams[0];\n                                this.selecionado.current.play();\n                            };\n                        }\n                    }\n\n                    break;\n            }\n        }\n\n        this.signaling.onclose = () =>\n        {\n            console.log('fechado')\n        }\n    }\n}\n\nexport default Conferencia;","import React, { Component } from 'react';\n\nclass Monitoramento extends Component\n{\n    render()\n    {\n        return (\n            <div className=\"Monitoramento\">\n                <div className=\"Monitoramento-Relatorios\">\n                    <div className=\"Monitoramento-Sinalizacoes\">                        \n                        <div className=\"Monitoramento-Cabecalho\">Servidor de Sinalização</div>\n                        <table className=\"Monitoramento-Acoes\">\n                            <tbody>\n                                <tr className=\"Monitoramento-Item\">\n                                    <td>\n                                        <div className=\"Monitoramento-Conectado\" style={{backgroundColor: 'red'}}>Rosa</div>\n                                    </td>\n                                    <td>\n                                        <div className=\"Monitoramento-Acao\">Conectado</div>\n                                    </td>\n                                    <td>\n                                        <div className=\"Monitoramento-Conectado\" style={{backgroundColor: 'black'}}>Conectado</div>\n                                    </td>\n                                </tr>\n\n                                <tr className=\"Monitoramento-Item\">\n                                    <td>\n                                        <div className=\"Monitoramento-Conectado\" style={{backgroundColor: 'pink'}}>Carol</div>\n                                    </td>\n                                    <td>\n                                        <div className=\"Monitoramento-Acao\">Conectado</div>\n                                    </td>\n                                    <td>\n                                        <div className=\"Monitoramento-Conectado\" style={{backgroundColor: 'black'}}>Conectado</div>\n                                    </td>\n                                </tr>\n\n                                <tr className=\"Monitoramento-Item\">\n                                    <td>\n                                        <div className=\"Monitoramento-Conectado\" style={{backgroundColor: 'black'}}>Servidor</div>\n                                    </td>\n                                    <td>\n                                        <div className=\"Monitoramento-Acao\">Criação</div>\n                                    </td>\n                                    <td>\n                                        <div className=\"Monitoramento-Conectado\" style={{backgroundColor: 'red'}}>Rosa</div>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                    <div className=\"Monitoramento-Detalhes\">\n                        <div className=\"Monitoramento-Conteudo\">\n                            <div className=\"Monitoramento-Item\"><b>10</b> Conectados</div>\n                            <div className=\"Monitoramento-Item\"><b>Vinicius</b> Selecionado</div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"Monitoramento-Conectados\">\n                    <div className=\"Monitoramento-Item\">\n                        <div className=\"Monitoramento-Video\">\n                            <img src='https://picsum.photos/800/800'/>\n                        </div>\n                        <div className=\"Monitoramento-Conectado\" style={{backgroundColor: 'pink'}}>Carol</div>\n                    </div>\n\n                    <div className=\"Monitoramento-Item\">\n                        <div className=\"Monitoramento-Video\">\n                            <img src='https://picsum.photos/800/800'/>\n                        </div>\n                        <div className=\"Monitoramento-Conectado\" style={{backgroundColor: 'red'}}>Rosa</div>\n                    </div>\n\n                    <div className=\"Monitoramento-Item\">\n                        <div className=\"Monitoramento-Video\">\n                            <img src='https://picsum.photos/800/800'/>\n                        </div>\n                        <div className=\"Monitoramento-Conectado\" style={{backgroundColor: 'green'}}>Lisa</div>\n                    </div>\n\n                    <div className=\"Monitoramento-Item\">\n                        <div className=\"Monitoramento-Video\">\n                            <img src='https://picsum.photos/800/800'/>\n                        </div>\n                        <div className=\"Monitoramento-Conectado\" style={{backgroundColor: 'gray'}}>Alan</div>\n                    </div>\n\n                    <div className=\"Monitoramento-Item\">\n                        <div className=\"Monitoramento-Video\">\n                            <img src='https://picsum.photos/800/800'/>\n                        </div>\n                        <div className=\"Monitoramento-Conectado\" style={{backgroundColor: 'orange'}}>Renata</div>\n                    </div>\n\n                    <div className=\"Monitoramento-Item\">\n                        <div className=\"Monitoramento-Video\">\n                            <img src='https://picsum.photos/800/800'/>\n                        </div>\n                        <div className=\"Monitoramento-Conectado\" style={{backgroundColor: 'blue'}}>Vinicius</div>\n                    </div>\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Monitoramento;","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\nimport Cadastro from './Cadastro';\nimport Conferencia from './Conferencia';\nimport Monitoramento from './Monitoramento';\n\nclass App extends Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n  render()\n  {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Route path=\"/cadastro\" component={Cadastro}/>\n          <Route path=\"/conferencia\" component={Conferencia}/>\n          <Route path=\"/monitoramento\" component={Monitoramento}/>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}